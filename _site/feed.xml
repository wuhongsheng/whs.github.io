<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WHS</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 15 Jun 2017 14:14:21 +0800</pubDate>
    <lastBuildDate>Thu, 15 Jun 2017 14:14:21 +0800</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>APK反编译</title>
        <description>
Android Apk反编译学习路线

</description>
        <pubDate>Mon, 05 Jun 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/06/05/APK%E5%8F%8D%E7%BC%96%E8%AF%91/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/06/05/APK%E5%8F%8D%E7%BC%96%E8%AF%91/</guid>
        
        <category>反编译</category>
        
        <category>Android</category>
        
        
        <category>反编译</category>
        
      </item>
    
      <item>
        <title>Python爬虫从入门到放弃</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#python开发工具的选择&quot; id=&quot;markdown-toc-python开发工具的选择&quot;&gt;Python开发工具的选择&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#文本类&quot; id=&quot;markdown-toc-文本类&quot;&gt;文本类&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#集成类ide&quot; id=&quot;markdown-toc-集成类ide&quot;&gt;集成类（IDE）&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#常用库介绍&quot; id=&quot;markdown-toc-常用库介绍&quot;&gt;常用库介绍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#相关资料&quot; id=&quot;markdown-toc-相关资料&quot;&gt;相关资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

Python爬虫与信息提取

&lt;h3 id=&quot;python开发工具的选择&quot;&gt;Python开发工具的选择&lt;/h3&gt;

&lt;h4 id=&quot;文本类&quot;&gt;文本类&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;IDLE  自带的、默认、代码一般不超过300行&lt;/li&gt;
  &lt;li&gt;Notepad++&lt;/li&gt;
  &lt;li&gt;Sublime Text  专业的编程体验&lt;/li&gt;
  &lt;li&gt;Vim &amp;amp; Emacs&lt;/li&gt;
  &lt;li&gt;Atom&lt;/li&gt;
  &lt;li&gt;Komodo Edit&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;集成类ide&quot;&gt;集成类（IDE）&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    PyCharm  社区版免费、专业版收费
  &lt;/li&gt;
  &lt;li&gt;
    Wing  收费、调试、版本控制、同步
  &lt;/li&gt;
  &lt;li&gt;
    PyDev &amp;amp; Eclipse   开源开放、自定义使用相对复杂
  &lt;/li&gt;
  &lt;li&gt;
    PTVS &amp;amp; Visual Studio  丰富的调试功能
  &lt;/li&gt;
  &lt;li&gt;
    Anaconda &amp;amp; Spyder  开源免费、支持800个库、和Canopy由同一个人领导开发  用于科学计算
  &lt;/li&gt;
  &lt;li&gt;
    Canopy  收费、用于科学计算、支持超过500个库
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;常用库介绍&quot;&gt;常用库介绍&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://www.python-requests.org&quot;&gt;Requests&lt;/a&gt;

    安装：
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip  install requests
pip3 install requests
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    调用方式：&lt;code class=&quot;highlighter-rouge&quot;&gt;import requests&lt;/code&gt;

    用途：发起请求、获取请求内容
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup/&quot;&gt;BeautifulSoup&lt;/a&gt;

    安装：
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip  install beautifulsoup4
pip3 install beautifulsoup4
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    调用方式：&lt;code class=&quot;highlighter-rouge&quot;&gt;from bs4 import beautifulsoup&lt;/code&gt;

    用途：解析HTML标签
  &lt;/li&gt;
  &lt;li&gt;
    Re(正则表达式)库是Python的标准库

    用途：
调用方式：&lt;code class=&quot;highlighter-rouge&quot;&gt;import re&lt;/code&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://scrapy.org/&quot;&gt;Scrapy爬虫框架&lt;/a&gt;

    安装：&lt;code class=&quot;highlighter-rouge&quot;&gt;pip install scrapy&lt;/code&gt;

    测试：&lt;code class=&quot;highlighter-rouge&quot;&gt;scrapy ‐h&lt;/code&gt;

    使用：

    ** 初始化一个工程

    &lt;code class=&quot;highlighter-rouge&quot;&gt;scrapy startproject [projectnaem]&lt;/code&gt;

    ** 建一个爬虫

    &lt;code class=&quot;highlighter-rouge&quot;&gt;scrapy genspider [spidername] [url]&lt;/code&gt;

    ** 配置产生的爬虫

    ** 运行爬虫

    &lt;code class=&quot;highlighter-rouge&quot;&gt;scrapy crawl [spidername]&lt;/code&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;相关资料&quot;&gt;相关资料&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5MDI3MjA5MQ==&amp;amp;mid=2697266133&amp;amp;idx=1&amp;amp;sn=51426072d8ad4c4496795127e9c9f1ae&amp;amp;chksm=8376fce1b40175f76724b8be9d5bfcda3d3759c4fc30f9ee38f776dd832bd5171034e6a3e89d&amp;amp;mpshare=1&amp;amp;scene=23&amp;amp;srcid=0606X6JFFUGEK1P1JUuH9GXM%23rd&quot;&gt;那些你不知道的爬虫反爬虫套路&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://gashero.iteye.com/&quot;&gt;gashero的Geek前哨&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 03 Jun 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/06/03/Python%E7%88%AC%E8%99%AB%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/06/03/Python%E7%88%AC%E8%99%AB%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</guid>
        
        <category>Python</category>
        
        <category>爬虫</category>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>GIS 开发从入门到放弃</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#相关网站&quot; id=&quot;markdown-toc-相关网站&quot;&gt;相关网站&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#技术路线&quot; id=&quot;markdown-toc-技术路线&quot;&gt;技术路线&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#开源gis&quot; id=&quot;markdown-toc-开源gis&quot;&gt;开源GIS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#商业gis&quot; id=&quot;markdown-toc-商业gis&quot;&gt;商业GIS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#主要技术&quot; id=&quot;markdown-toc-主要技术&quot;&gt;主要技术&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#投影转换和坐标校正&quot; id=&quot;markdown-toc-投影转换和坐标校正&quot;&gt;投影转换和坐标校正&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

GIS学习路线

&lt;h3 id=&quot;相关网站&quot;&gt;相关网站&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.osgeo.org/&quot;&gt;OSGeo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;技术路线&quot;&gt;技术路线&lt;/h3&gt;

&lt;h5 id=&quot;开源gis&quot;&gt;开源GIS&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;postgis+geoserver/geotools+ol/leaflet&lt;/li&gt;
&lt;/ul&gt;

桌面GIS - QGIS，OpenEV
GIS工作站 - GRASS，OSSIM
GIS开发工具包 - GDAL / OGR，地理工具
地理统计 - GNU R
Web映射服务器 - MapGuide开源，Mapserver，GeoServer
网页地图客户端 - MapBuilder
元数据服务器 - Isite
空间数据引擎 - PostGIS，myGIS
C / S数据库 - PostgreSQL，mySQL，SQLite

&lt;h5 id=&quot;商业gis&quot;&gt;商业GIS&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    Arcgis平台
  &lt;/li&gt;
  &lt;li&gt;
    超图平台
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;主要技术&quot;&gt;主要技术&lt;/h3&gt;

&lt;h4 id=&quot;投影转换和坐标校正&quot;&gt;投影转换和坐标校正&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://trac.osgeo.org/proj4j/&quot;&gt;Proj4J&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 31 May 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/05/31/GIS%E5%BC%80%E5%8F%91%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/31/GIS%E5%BC%80%E5%8F%91%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</guid>
        
        <category>GIS</category>
        
        
        <category>GIS</category>
        
      </item>
    
      <item>
        <title>Kotlin 从入门到放弃</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#相关网站及资料&quot; id=&quot;markdown-toc-相关网站及资料&quot;&gt;相关网站及资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

Kotlin学习路线

&lt;h3 id=&quot;相关网站及资料&quot;&gt;相关网站及资料&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;a href=&quot;http://kotlinlang.org/docs/tutorials/kotlin-android.html&quot;&gt;Kotlin官网&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://github.com/wangjiegulu/kotlin-for-android-developers-zh/blob/master/SUMMARY.md?hmsr=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&quot;&gt;《Kotlin for android developers》中文翻译版&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://github.com/MindorksOpenSource/from-java-to-kotlin/blob/master/README-ZH.md&quot;&gt;from-java-to-kotlin&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;https://juejin.im/post/591dd9f544d904006c9fbb96&quot;&gt;Kotlin 资源大全&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 30 May 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/05/30/Kotlin%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/30/Kotlin%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</guid>
        
        <category>Kotlin</category>
        
        
        <category>Kotlin</category>
        
      </item>
    
      <item>
        <title>Android学习路线</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#基础知识&quot; id=&quot;markdown-toc-基础知识&quot;&gt;基础知识&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#android初级&quot; id=&quot;markdown-toc-android初级&quot;&gt;Android初级&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#android中级&quot; id=&quot;markdown-toc-android中级&quot;&gt;Android中级&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#android高级&quot; id=&quot;markdown-toc-android高级&quot;&gt;Android高级&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

Android学习路线

&lt;h3 id=&quot;基础知识&quot;&gt;基础知识&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Java基础知识（Java线程）
&lt;a href=&quot;http://www.cnblogs.com/tjudzj/p/4443066.html&quot;&gt;Java访问修饰符&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;开发坏境搭建（JDK、AS）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wuhongsheng.top/2017/04/11/Android%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/&quot;&gt;Android开发代码规范&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Android四大组件，Activity启动模式、生命周期管理，Fragement生命周期。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;android初级&quot;&gt;Android初级&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;用户界面及自定义控件&lt;/li&gt;
  &lt;li&gt;资源文件的使用&lt;/li&gt;
  &lt;li&gt;数据持久化（Sqlite、File、Sharedpreferences）&lt;/li&gt;
  &lt;li&gt;MeterialDesign&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;android中级&quot;&gt;Android中级&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;图形和动画绘制&lt;/li&gt;
  &lt;li&gt;网络编程（Http、Socket、Bluetooth、NFC）&lt;/li&gt;
  &lt;li&gt;屏幕适配（dp和px换算）&lt;/li&gt;
  &lt;li&gt;单元测试&lt;/li&gt;
  &lt;li&gt;进程间通信（4种方式）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;android高级&quot;&gt;Android高级&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;NDK编程&lt;/li&gt;
  &lt;li&gt;传感器应用&lt;/li&gt;
  &lt;li&gt;地图应用&lt;/li&gt;
  &lt;li&gt;跨平台开发&lt;/li&gt;
  &lt;li&gt;Android性能优化（UI、电量、内存）&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 11 May 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/05/11/Android%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/11/Android%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</guid>
        
        <category>Android</category>
        
        
        <category>Android</category>
        
      </item>
    
      <item>
        <title>智能硬件学习</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#相关网站&quot; id=&quot;markdown-toc-相关网站&quot;&gt;相关网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

智能硬件学习

&lt;h3 id=&quot;相关网站&quot;&gt;相关网站&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackster.io/&quot;&gt;Hackster&lt;/a&gt;
致力于学习硬件的社区&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 10 May 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/05/10/%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/10/%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6/</guid>
        
        <category>智能硬件</category>
        
        
        <category>智能硬件</category>
        
      </item>
    
      <item>
        <title>MacBook使用技巧</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#启用键盘打字机音效&quot; id=&quot;markdown-toc-启用键盘打字机音效&quot;&gt;启用键盘打字机音效&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

MacBook使用技巧

&lt;h3 id=&quot;启用键盘打字机音效&quot;&gt;启用键盘打字机音效&lt;/h3&gt;

系统偏好设置 -&amp;gt; 辅助功能 -&amp;gt; 键盘 -&amp;gt; 启用慢速键 -&amp;gt; 选项（勾选使用按键音并将延时时间调到最短）

</description>
        <pubDate>Wed, 10 May 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/05/10/MacBook%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/10/MacBook%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
        
        <category>MacBook</category>
        
        
        <category>MacBook</category>
        
      </item>
    
      <item>
        <title>普通程序员如何向人工智能靠拢</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#参考资料&quot; id=&quot;markdown-toc-参考资料&quot;&gt;参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

机器学习基础

&lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;

&lt;a href=&quot;http://www.infoq.com/cn/news/2017/05/ordinary-programmer-approach-art?utm_source=news_about_architecture-design&amp;amp;utm_medium=link&amp;amp;utm_campaign=architecture-design&quot;&gt;普通程序员如何向人工智能靠拢&lt;/a&gt;

&lt;a href=&quot;https://google.ai/&quot;&gt;Google.ai&lt;/a&gt;

</description>
        <pubDate>Tue, 09 May 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/05/09/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%92%8C%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/09/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%92%8C%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</guid>
        
        <category>机器学习</category>
        
        <category>AI</category>
        
        
        <category>机器学习</category>
        
      </item>
    
      <item>
        <title>GreenDAO使用教程</title>
        <description>
&lt;a href=&quot;http://greenrobot.org/greendao/&quot;&gt;GreenDAO&lt;/a&gt; 使用教程
&lt;a href=&quot;http://blog.csdn.net/Hi_AndG/article/details/54695725&quot;&gt;GreenDao3.2.0使用教程&lt;/a&gt;

&lt;ol&gt;
  &lt;li&gt;集成环境&lt;/li&gt;
&lt;/ol&gt;

&lt;pre class=&quot;prettyprint lang-java&quot;&gt;
// In your root build.gradle file:
buildscript {
    repositories {
        jcenter()
        mavenCentral() // add repository
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2' // add plugin
    }
}
 
// In your app projects build.gradle file:
apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin
 
dependencies {
    compile 'org.greenrobot:greendao:3.2.2' // add library
}
&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;在Gradle中配置数据库版本信息等&lt;/li&gt;
&lt;/ol&gt;

&lt;pre class=&quot;prettyprint lang-java&quot;&gt;
greendao {
        //当前数据库版本
        schemaVersion 1
        //由GreenDao自动生成代码所在的包名，默认的是在项目包下面新建一个gen。
        daoPackage 'com.titan.data.greendao'
        //设置自动生成代码的目录
        targetGenDir 'src/main/java'
    }
&lt;/pre&gt;

3.在项目中定义实体类

&lt;pre class=&quot;prettyprint lang-java&quot;&gt;
@Entity
public class TrackPoint  {
    @Id(autoincrement = true)
    private Long id;
    /**上传时间*/
    @NotNull
    @Property(nameInDb = &quot;TIME&quot;)
    private String time;
    /**经度*/
    @Property(nameInDb = &quot;LON&quot;)
    private double lon;
    /**纬度*/
    @Property(nameInDb = &quot;LAT&quot;)
    private double lat;
    /**用户id*/
    @Property(nameInDb = &quot;USERID&quot;)
    private String userid;
    }
&lt;/pre&gt;

注解：

@Entity   标识实体类，greenDAO会映射成sqlite的一个表，表名为实体类名的大写形式

@Id 标识主键，该字段的类型为long或Long类型，autoincrement设置是否自动增长

@Property       标识该属性在表中对应的列名称, nameInDb设置名称

@Transient      标识该属性将不会映射到表中，也就是没有这列

@NotNull         设置表中当前列的值不可为空

@Convert         指定自定义类型(@linkPropertyConverter)

@Generated   greenDAO运行所产生的构造函数或者方法，被此标注的代码可以变更或者下次运行时清除

@Index    使用@Index作为一个属性来创建一个索引；定义多列索引(@link Entity#indexes())

@JoinEntity     定义表连接关系

@JoinProperty         定义名称和引用名称属性关系

@Keep     注解的代码段在GreenDao下次运行时保持不变

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      1.注解实体类：默认禁止修改此类
      2.注解其他代码段，默认禁止修改注解的代码段
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

@OrderBy        指定排序

@ToMany         定义与多个实体对象的关系

@ToOne  定义与另一个实体（一个实体对象）的关系

@Unique 向数据库列添加了一个唯一的约束

4.生成相关代码

定义好了之后按ctrl+F9（或者工具栏build下面的Make Project）对项目进行重新构建，再
daoPackage的目录下就会自动生成代码

5.新建一个类，实例化greenDAO所需要的几个关键对象，DaoMaster，DaoSession，代码如下：

&lt;pre class=&quot;prettyprint lang-java&quot;&gt;
public class GreenDaoManager {
    private DaoMaster mDaoMaster;
    private DaoSession mDaoSession;
    private static volatile GreenDaoManager mInstance = null;
    private GreenDaoManager(){
        if (mInstance == null) {
            DaoMaster.DevOpenHelper devOpenHelper = new
            DaoMaster.DevOpenHelper(App.getContext(), &quot;user.db&quot;);
            mDaoMaster = new DaoMaster(devOpenHelper.getWritableDatabase());
            mDaoSession = mDaoMaster.newSession();
        }
    }
    public static GreenDaoManager getInstance() {
        if (mInstance == null) {
            synchronized (GreenDaoManager.class) {                
            if (mInstance == null) {
                    mInstance = new GreenDaoManager();
                }
            }
        }
        return mInstance;
    }
    public DaoMaster getMaster() {
        return mDaoMaster;
    }
    public DaoSession getSession() {
        return mDaoSession;
    }
    public DaoSession getNewSession() {
        mDaoSession = mDaoMaster.newSession();
        return mDaoSession;
    }
}
&lt;/pre&gt;

6.然后在Application中初始化：

&lt;code class=&quot;highlighter-rouge&quot;&gt;GreenDaoManager.getInstance();&lt;/code&gt;

7.数据库增、删、查、改

首先获得UserDao的对象

&lt;pre class=&quot;prettyprint lang-java&quot;&gt;
UserDao userDao=GreenDaoManager.getInstance().getNewSession().getUserDao();
&lt;/pre&gt;

增：

&lt;pre class=&quot;prettyprint lang-java&quot;&gt;
User user = new User(null, name, age, studentId);
userDao.insert(user);


insert(T entity)       当指定主键在表中存在时会发生异常
insertOrReplace(T entity)      当指定主键在表中存在时会覆盖数据
insertInTx(Iterable&lt;T&gt; entities)      批量插入数据
&amp;lt;/pre&amp;gt;
s
 
删：
```
User user = new User(null, name, age, studentId);    
userDao.delete(user)
 
delete(T entity)       删除数据
deleteByKey(K key)     指定主键删除数据
deleteInTx(Iterable&lt;T&gt; entities)      批量删除数据
deleteByKeyInTx(Iterable&lt;K&gt; keys)      批量按数据删除数据        
deleteAll()    删除所有数据
```
改：
```
User user = new User(id, name, age, studentId);
userDao.update(user);
 
update(T entity)       修改数据，主键需相同
updateInTx(Iterable&lt;T&gt; entities)      批量更新数据
```
 
查：
```
userDao.load(id)
 
load(K key)    根据id查找数据
loadByRowId(long rowId)        根据行号查找数据
loadAll()      查找全部数据

```

8.一对一、一对多关系

greenDAO目前只支持一对一和一对多关系，并不支持多对多关系

一对一：
```
private Long studentId;
@ToOne(joinProperty = &quot;studentId&quot;)
private Studentstudent;
```

```
@Generated(hash = 313494093)
public Student getStudent() {
    Long __key = this.studentId;
    if (student__resolvedKey == null || !student__resolvedKey.equals(__key)) {
        final DaoSession daoSession = this.daoSession;
        if (daoSession == null) {
            throw new DaoException(&quot;Entity is detached from DAO context&quot;);
        }
        StudentDao targetDao = daoSession.getStudentDao();
        Student studentNew = targetDao.load(__key);
        synchronized (this) {
            student = studentNew;
            student__resolvedKey = __key;
        }
    }
    return student;
}
```
使用@ToOne标记，joinProperty指定一个字段，如果没有定义，会自动生成一个字段，get方法时自动生成的，使用@Generated标记，代表自动生成的，无需动代码。

 

一对多（有三种映射形式）：
```
@ToMany(referencedJoinProperty = &quot;teacherId&quot;)
private List&lt;Teacher&gt; teacherList;
```

 referencedJoinProperty：指定目标实体中与源实体相对应的外键。
```
@ToMany(joinProperties = {
        @JoinProperty(name=&quot;studentTag&quot;,referencedName = &quot;teacherTag&quot;)
})
private List&lt;Teacher&gt; teacherList;
```
JoinProperty: 对于复杂一点的关系可以定义一组@JoinProperty注解。每个@JoinProperty注解都需要有源实体中的源属性和对应实体中的引用属性。
```
@ToMany
@JoinEntity(
        entity = Teacher.class,
        sourceProperty = &quot;teacherId&quot;,
        targetProperty = &quot;id&quot;
)
private List&lt;Teacher&gt; teacherList;
```
@JoinEntity：在做NM多对多映射的时候使用

9.数据库升级

数据库升级最麻烦的就是数据保存的问题，下面是数据库升级时执行的代码。
```
/** WARNING: Drops all table on Upgrade! Use only during development. */
public static class DevOpenHelper extends OpenHelper {
    public DevOpenHelper(Context context, String name) {
        super(context, name);
    }

    public DevOpenHelper(Context context, String name, CursorFactory factory) {
        super(context, name, factory);
    }

    @Override
    public void onUpgrade(Database db, int oldVersion, int newVersion) {
        Log.i(&quot;greenDAO&quot;, &quot;Upgrading schema from version &quot; + oldVersion + &quot; to &quot; + newVersion + &quot; by dropping all tables&quot;);
        dropAllTables(db, true);
        onCreate(db);
    }
}
```
第一句注释的话已经告诉我们数据库升级时会删除所有的表，重新创建。所以我们可以自定义一个类继承OpenHelper，在升级时先生成临时表，删除旧表创建新表后，再把临时表的数据导入进去。有牛人已经做出这个项目来了，我就厚颜无耻选择直接用了。

在project的gradle添加
```
allprojects {
    repositories {
        jcenter()
        maven { url &quot;https://jitpack.io&quot; }
    }
}
```

在app的gradle添加：
```
compile 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v1.3.0'
注意：要是使用的还是greenDAO3.0以前的版本，添加的是

compile 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v1.0.1'
```

新建一个类
```
public class MySQLiteOpenHelperextendsDaoMaster.OpenHelper{
    public MySQLiteOpenHelper(Contextcontext,Stringname){
        super(context,name);
    }
    public MySQLiteOpenHelper(Contextcontext,String name,SQLiteDatabase.CursorFactoryfactory) {
        super(context,name,factory);
    }
    @Override
    public void onUpgrade(SQLiteDatabasedb,int oldVersion,intnewVersion) {
        Log.d(“SQLite”,“数据库从”+oldVersion+“升级到”+newVersion);
        MigrationHelper.migrate(db,UserDao.class,StudentDao.class);
    }
}
```

在GreenDaoManager修改代码：
```
public class GreenDaoManager {
    private DaoMaster mDaoMaster;
    private DaoSession mDaoSession;
    private static volatile GreenDaoManager mInstance = null; 
    private GreenDaoManager(){
        if (mInstance == null) {
            //重写MySQLiteOpenHelper数据库升级，数据不丢失
            //MyApplication.getContext()上下文表示了数据库存储路径为手机内存
            //DEBUG表示是否打印debug
            MigrationHelper.DEBUG = true;
            MySQLiteOpenHelper helper = new
                    MySQLiteOpenHelper(App.getContext(),&quot;user.db&quot;,null);
            mDaoMaster = new DaoMaster(helper.getWritableDatabase());
            mDaoSession = mDaoMaster.newSession();
        }
    }

    public static GreenDaoManager getInstance() {
        if (mInstance == null) {
            synchronized (GreenDaoManager.class) {                if (mInstance == null) {
                    mInstance = new GreenDaoManager();
                }
            }
        }
        return mInstance;
    }
    public DaoMaster getMaster() {
        return mDaoMaster;
    }
    public DaoSession getSession() {
        return mDaoSession;
    }
    public DaoSession getNewSession() {
        mDaoSession = mDaoMaster.newSession();
        return mDaoSession;
    }
}
```
注意：migrate(SQLiteDatabase db, Class... daoClasses); 里面的参数是全部的实体类，就是要生成的表。
要生成的表。





&lt;/Teacher&gt;&lt;/Teacher&gt;&lt;/Teacher&gt;&lt;/T&gt;&lt;/K&gt;&lt;/T&gt;&lt;/T&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 08 May 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/05/08/GreenDAO%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/08/GreenDAO%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
        
        <category>Android</category>
        
        <category>GreenDAO</category>
        
        
        <category>Android</category>
        
      </item>
    
      <item>
        <title>Android开发常用技巧</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#uiueux&quot; id=&quot;markdown-toc-uiueux&quot;&gt;UI/UE/UX&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#rippledrawable---波纹效果&quot; id=&quot;markdown-toc-rippledrawable---波纹效果&quot;&gt;RippleDrawable - 波纹效果&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

Android 开发技巧

&lt;h3 id=&quot;uiueux&quot;&gt;UI/UE/UX&lt;/h3&gt;

&lt;h4 id=&quot;rippledrawable---波纹效果&quot;&gt;RippleDrawable - 波纹效果&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;使用Android 提供的属性&lt;/li&gt;
&lt;/ul&gt;

&lt;code class=&quot;highlighter-rouge&quot;&gt;android:foreground=&quot;?android:attr/selectableItemBackground&quot;&lt;/code&gt;

扩散到View边界

&lt;code class=&quot;highlighter-rouge&quot;&gt;android:foreground=&quot;?android:attr/selectableItemBackgroundBorderless&lt;/code&gt;

设置后，会从孩子往父亲找一个依附的色。如果View往上找的时候，亲生父亲没背景色，会继续向上查找直到最顶端。找到了最顶端的爷爷，这个时候才绘制。然而，如果父亲的兄弟又绘制了颜色，且盖住了最顶端的绘制，会导致看不到效果。如果有一定的透明度，结果就显而易见了。
特别注意：
当把硬件加速给关闭时，这个效果是没有的。
这是API 21的新属性，老版本无法使用.

&lt;ul&gt;
  &lt;li&gt;自定义&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!-- A green ripple drawn atop a black rectangle. --&amp;gt;
&amp;lt;ripple android:color=&quot;#ff00ff00&quot;&amp;gt;
    &amp;lt;item android:drawable=&quot;@android:color/black&quot; /&amp;gt;
&amp;lt;/ripple&amp;gt;
 
&amp;lt;!-- A blue ripple drawn atop a drawable resource. --&amp;gt;
&amp;lt;ripple android:color=&quot;#ff0000ff&quot;&amp;gt;
    &amp;lt;item android:drawable=&quot;@drawable/my_drawable&quot; /&amp;gt;
&amp;lt;/ripple&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

android:color中是点击响应色，也是波纹扩散色。
item中是正常状态下的显示。

一般使用时会和原有的selector配合，原有的selector负责5.0以下显示效果，
新的selector内部含有ripple标签放在drawable-v21中，保证点击效果。

</description>
        <pubDate>Mon, 08 May 2017 16:14:54 +0800</pubDate>
        <link>http://localhost:4000/2017/05/08/Android%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/08/Android%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
        
        <category>Android</category>
        
        
        <category>Android</category>
        
      </item>
    
  </channel>
</rss>
